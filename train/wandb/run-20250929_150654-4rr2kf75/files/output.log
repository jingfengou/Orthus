[34m[1mwandb[0m: [33mWARNING[0m Serializing object of type dict that is 1922480 bytes
  0%|                                                                                                                                | 0/118 [00:00<?, ?it/s]2025-09-29 15:06:58,081 - WARNING - `use_cache=True` is incompatible with gradient checkpointing. Setting `use_cache=False`.

======================================== [DEBUGGING AT GLOBAL STEP: 0] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'A': 'Option A is incorrect because it is a vertically mirrored version of the back-bottom-left view.', 'C': 'Option C is incorrect because it is a horizontally mirrored version of the front-top-right view.', 'ABCD': 'Assuming the bottom face is the first cell in the second row of the net, then after folding, the front face is cyan, the back face is red, the left face is green, the right face is blue, the top face is yellow, the bottom face is pink.', 'B': 'Option B is correct because it shows the back-bottom-right view.'} The final answer is <answer>B</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m[0m
  3%|‚ñà‚ñà‚ñà‚ñà                                                                                                                    | 4/118 [00:50<22:32, 11.86s/it]

======================================== [DEBUGGING AT GLOBAL STEP: 1] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'ABCD': 'The counterclockwise rotation of the green object drives the orange object to rotate clockwise, which in turn pulls the weight upward.'} The final answer is <answer>C</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m[0m

======================================== [DEBUGGING AT GLOBAL STEP: 2] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'D': 'Option D is incorrect because it is the cross-section of the shape made by a plane parallel to the YZ plane.', 'B': 'Option B is incorrect because it is the cross-section of the shape made by a plane parallel to the XY plane.', 'A': 'Option A is incorrect because it is the cross-section of the shape made by a plane parallel to the YZ plane.', 'C': 'Option C is correct because the corresponding cross-section does not match the shape shown in the reference image.'} The final answer is <answer>C</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m[0m

======================================== [DEBUGGING AT GLOBAL STEP: 3] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'D': 'Assuming the bottom face is the first cell in the second row of the net, and the right face is the cell to its right. Option D is correct because it shows the back-bottom-right view.', 'B': 'Assuming the bottom face is the first cell in the second row of the net, and the right face is the cell to its right. Option B is incorrect because it includes rotated non-symmetric faces.', 'C': 'Assuming the bottom face is the first cell in the second row of the net, and the right face is the cell to its right. Option C is incorrect because it includes rotated non-symmetric faces.', 'A': 'Assuming the bottom face is the first cell in the second row of the net, and the right face is the cell to its right. Option A is incorrect because it is a horizontally mirrored version of the back-top-left view.'} The final answer is <answer>D</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m[0m

======================================== [DEBUGGING AT GLOBAL STEP: 4] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'C': 'Option C is correct because the initial arrow can be transformed into the final arrow.', 'BDA': 'Option BDA is incorrect because the initial arrow cannot be transformed into the final arrow.'} The final answer is <answer>C</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m[0m

======================================== [DEBUGGING AT GLOBAL STEP: 5] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'B': 'Option B is incorrect because holes in column 1 are missing.', 'A': 'Option A is incorrect because extra holes appear in column 2.', 'D': 'Option D is incorrect because holes that should appear in column 1 appear in column 2.'} The final answer is <answer>C</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m[0m

======================================== [DEBUGGING AT GLOBAL STEP: 6] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'ABCD': 'Given three views, at least 4 cubes and at most 4 cubes are required to satisfy the constraints.'} The final answer is <answer>D</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m[0m

======================================== [DEBUGGING AT GLOBAL STEP: 7] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'C': 'Option C is correct because it was obtained by rotating the original image 180 degrees.', 'A': 'Option A is incorrect because it was obtained by rotating the original image 180 degrees and then flipping it horizontally.', 'B': 'Option B is incorrect because it was obtained by rotating the original image 90 degrees and then flipping it vertically.'} The final answer is <answer>C</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m[0m

======================================== [DEBUGGING AT GLOBAL STEP: 8] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'B': 'Option B is incorrect because one cube is missing, resulting in an incorrect cube stack shape.', 'C': 'Option C is incorrect because one cube is missing, resulting in an incorrect cube stack shape.'} The final answer is <answer>A</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m[0m

======================================== [DEBUGGING AT GLOBAL STEP: 9] ========================================

--- [1. Ground Truth Labels] ---
Decoded Labels: [92m'CDB': 'Option CDB is incorrect because this net could be a valid net for the given cube, as the positions of cyan, pink, and blue match the shown cube.', 'A': 'Option A is correct because this net cannot be a valid net for the given cube, as the positions of yellow and cyan are reversed.'} The final answer is <answer>A</answer>[0m

--- [2. Model Prediction from Logits] ---
Decoded Prediction: [93m cube cube answeranswer[0m
{'loss': 19.682, 'grad_norm': 70.88921356201172, 'learning_rate': 4.965903258506806e-06, 'epoch': 0.08}

--- [2. Model Prediction from Logits] ---

‚ùå [Failure] Training failed with an error: argument 'ids': 'list' object cannot be interpreted as an integer
Traceback (most recent call last):
  File "/data1/oujingfeng/project/twgi/Orthus/train/train_orthus.py", line 157, in main
    trainer.train(resume_from_checkpoint=True if os.path.isdir(args.output_dir) and any(fn.startswith("checkpoint-") for fn in os.listdir(args.output_dir)) else False)
  File "/data1/oujingfeng/project/twgi/Orthus/transformers/src/transformers/trainer.py", line 2122, in train
    return inner_training_loop(
           ^^^^^^^^^^^^^^^^^^^^
  File "/data1/oujingfeng/project/twgi/Orthus/transformers/src/transformers/trainer.py", line 2541, in _inner_training_loop
    self._maybe_log_save_evaluate(tr_loss, grad_norm, model, trial, epoch, ignore_keys_for_eval)
  File "/data1/oujingfeng/project/twgi/Orthus/transformers/src/transformers/trainer.py", line 2997, in _maybe_log_save_evaluate
    metrics = self._evaluate(trial, ignore_keys_for_eval)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data1/oujingfeng/project/twgi/Orthus/transformers/src/transformers/trainer.py", line 2951, in _evaluate
    metrics = self.evaluate(ignore_keys=ignore_keys_for_eval)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data1/oujingfeng/project/twgi/Orthus/transformers/src/transformers/trainer.py", line 3964, in evaluate
    output = eval_loop(
             ^^^^^^^^^^
  File "/data1/oujingfeng/project/twgi/Orthus/transformers/src/transformers/trainer.py", line 4158, in evaluation_loop
    losses, logits, labels = self.prediction_step(model, inputs, prediction_loss_only, ignore_keys=ignore_keys)
                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data1/oujingfeng/project/twgi/Orthus/transformers/src/transformers/trainer.py", line 4374, in prediction_step
    loss, outputs = self.compute_loss(model, inputs, return_outputs=True)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data1/oujingfeng/project/twgi/Orthus/train/sft_orthus.py", line 219, in compute_loss
    decoded_preds = self.processor.tokenizer.decode(predicted_ids_masked.squeeze().tolist(), skip_special_tokens=True)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/data1/oujingfeng/project/twgi/Orthus/transformers/src/transformers/tokenization_utils_base.py", line 4004, in decode
    return self._decode(
           ^^^^^^^^^^^^^
  File "/data1/oujingfeng/project/twgi/Orthus/transformers/src/transformers/tokenization_utils_fast.py", line 651, in _decode
    text = self._tokenizer.decode(token_ids, skip_special_tokens=skip_special_tokens)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
TypeError: argument 'ids': 'list' object cannot be interpreted as an integer
  8%|‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                                                                                             | 10/118 [02:00<21:44, 12.08s/it]
